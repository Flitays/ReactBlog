{"version":3,"sources":["components/UI/modal/MyModal.module.css","components/UI/loader/Loader.module.css","components/UI/button/MyButton.module.css","components/UI/input/MyInput.module.css","components/UI/select/MySelect.module.css","context/index.js","pages/About.jsx","pages/Error.jsx","API/PostService.js","components/UI/loader/Loader.jsx","hooks/useFetching.js","pages/PostIdPage.jsx","hooks/usePosts.js","utils/pages.js","components/UI/button/MyButton.jsx","components/UI/input/MyInput.jsx","components/PostForm.jsx","components/UI/modal/MyModal.jsx","components/UI/select/MySelect.jsx","components/PostFilter.jsx","components/PostItem.jsx","components/PostList.jsx","components/UI/pagination/Pagination.jsx","pages/Posts.jsx","hooks/useObserver.js","pages/Login.jsx","router/index.js","components/AppRouter.jsx","components/UI/navbar/Navbar.jsx","App.js","index.js"],"names":["module","exports","AuthContext","createContext","About","Error","PostService","limit","page","axios","get","params","_limit","_page","response","id","Loader","className","cl","loader","useFetching","callback","useState","isLoading","setIsLoading","error","setError","fetching","a","message","PostIdPage","useParams","post","setPost","comments","setComments","getById","data","fetchByPostId","getCommentsByPostId","fetchComments","isComLoading","useEffect","title","map","comm","style","marginTop","email","body","usePosts","posts","sort","query","sortedPosts","useMemo","b","localeCompare","useSortedPosts","filter","toLowerCase","includes","getPageCount","totalCount","Math","ceil","MyButton","children","props","classes","myBtn","MyInput","React","forwardRef","ref","myInp","PostForm","create","value","onChange","e","target","type","placeholder","onClick","preventDefault","newPost","Date","now","MyModal","visible","setVisible","rootClasses","myModal","push","active","join","myModalContent","stopPropagation","MySelect","option","defaultValue","mySelect","event","disabled","name","PostFilter","setFilter","placeHolder","selectedSort","PostItem","router","useHistory","remove","PostList","length","textAlign","TransitionGroup","index","CSSTransition","timeout","classNames","number","Pagination","totalPages","changePage","pagesArray","result","i","getPagesArray","p","Posts","setPosts","modal","setModal","setTotalPages","setLimit","setPage","sortedAndSearchedPosts","lastElement","useRef","console","log","getAll","headers","fetchPosts","isPostsLoading","postError","canLoad","observer","current","disconnect","IntersectionObserver","entries","isIntersecting","observe","useObserver","margin","display","justifyContent","height","background","Login","PrivateRoutes","path","component","exact","PublicRoutes","useContext","setIsAuth","isAuth","onSubmit","localStorage","setItem","AppRouter","route","to","Navbar","removeItem","App","setLoading","getItem","Provider","ReactDOM","render","document","getElementById"],"mappings":"0FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,eAAiB,gCAAgC,OAAS,0B,mBCA/GD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,OAAS,yB,mBCA3DD,EAAOC,QAAU,CAAC,MAAQ,0B,mBCA1BD,EAAOC,QAAU,CAAC,MAAQ,yB,mBCA1BD,EAAOC,QAAU,CAAC,SAAW,6B,uHCChBC,EAAcC,wBAAc,M,OCgB1BC,MAhBf,WAEE,OACE,gCACE,2DACA,yPCISC,I,yDCTMC,E,kIACnB,2GAAoBC,EAApB,+BAA4B,GAAIC,EAAhC,+BAAuC,EAAvC,SACyBC,IAAMC,IAC3B,6CACA,CACEC,OAAQ,CACNC,OAAQL,EACRM,MAAOL,KANf,cACQM,EADR,yBAWSA,GAXT,2C,kHAcA,WAAqBC,GAArB,uFACyBN,IAAMC,IAC3B,8CAAgDK,GAFpD,cACQD,EADR,yBAKSA,GALT,2C,+HAQA,WAAiCC,GAAjC,uFACyBN,IAAMC,IAAN,qDACyBK,EADzB,cADzB,cACQD,EADR,yBAKSA,GALT,2C,+EClBaE,MAJf,WACE,OAAO,qBAAKC,UAAWC,IAAGC,UCFfC,EAAc,SAACC,GAC1B,MAAkCC,oBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KAEMC,EAAQ,uCAAG,sCAAAC,EAAA,sEAEbJ,GAAa,GAFA,SAGPH,EAAQ,WAAR,KAHO,sDAKbK,EAAS,KAAEG,SALE,uBAObL,GAAa,GAPA,0EAAH,qDAWd,MAAO,CAACG,EAAUJ,EAAWE,ICuChBK,MAlDf,WACE,IAAMnB,EAASoB,cAEf,EAAwBT,mBAAS,IAAjC,mBAAOU,EAAP,KAAaC,EAAb,KACA,EAAgCX,mBAAS,IAAzC,mBAAOY,EAAP,KAAiBC,EAAjB,KACA,EAA0Cf,EAAW,uCAAC,WAAOL,GAAP,eAAAa,EAAA,sEAC7BtB,EAAY8B,QAAQrB,GADS,OAC9CD,EAD8C,OAEpDmB,EAAQnB,EAASuB,MAFmC,2CAAD,uDAArD,mBAAOC,EAAP,KAAsBf,EAAtB,KAKA,GALA,KAKgDH,EAAW,uCAAC,WAAOL,GAAP,eAAAa,EAAA,sEACnCtB,EAAYiC,oBAAoBxB,GADG,OACpDD,EADoD,OAE1DqB,EAAYrB,EAASuB,MAFqC,2CAAD,wDAA3D,mBAAOG,EAAP,KAAsBC,EAAtB,KASA,OATA,KAKAC,qBAAU,WACRJ,EAAc3B,EAAOI,IACrByB,EAAc7B,EAAOI,MACpB,IAED,gCACE,+HAA4BJ,EAAOI,MAClCQ,EACC,cAAC,EAAD,IAEA,gCACGS,EAAKjB,GADR,KACciB,EAAKW,SAIrB,oGAEA,8BACGF,EACC,cAAC,EAAD,IAEA,8BACGP,EAASU,KAAI,SAACC,GAAD,OACZ,sBAAmBC,MAAO,CAAEC,UAAW,IAAvC,UACE,6BAAKF,EAAKG,QACV,8BAAMH,EAAKI,SAFHJ,EAAK9B,e,QC/BhBmC,EAAW,SAACC,EAAOC,EAAMC,GACpC,IAAMC,EAZsB,SAACH,EAAOC,GAQpC,OAPoBG,mBAAQ,WAC1B,OAAIH,EACK,YAAID,GAAOC,MAAK,SAACxB,EAAG4B,GAAJ,OAAU5B,EAAEwB,GAAMK,cAAcD,EAAEJ,OAEpDD,IACN,CAACC,EAAMD,IAMUO,CAAeP,EAAOC,GAO1C,OAN+BG,mBAAQ,WACrC,OAAOD,EAAYK,QAAO,SAAC3B,GAAD,OACxBA,EAAKW,MAAMiB,cAAcC,SAASR,QAEnC,CAACA,EAAOC,KCnBAQ,EAAe,SAACC,EAAYxD,GACvC,OAAOyD,KAAKC,KAAKF,EAAaxD,I,+CCQjB2D,EANE,SAAC,GAA0B,IAAzBC,EAAwB,EAAxBA,SAAaC,EAAW,iBACzC,OAAO,kDAAYA,GAAZ,IAAmBnD,UAAWoD,IAAQC,MAAtC,SACFH,M,iBCEQI,EAJCC,IAAMC,YAAW,SAACL,EAAOM,GACvC,OAAO,mCAAOA,IAAKA,EAAKzD,UAAWoD,IAAQM,OAAWP,OCgCzCQ,MAhCf,YAA+B,IAAXC,EAAU,EAAVA,OAClB,EAAwBvD,mBAAS,CAAEqB,MAAO,GAAIM,KAAM,KAApD,mBAAOjB,EAAP,KAAaC,EAAb,KAYA,OACE,iCACE,cAAC,EAAD,CACE6C,MAAO9C,EAAKW,MACZoC,SAAU,SAACC,GAAD,OAAO/C,EAAQ,2BAAKD,GAAN,IAAYW,MAAOqC,EAAEC,OAAOH,UACpDI,KAAK,OACLC,YAAY,oFAEd,cAAC,EAAD,CACEL,MAAO9C,EAAKiB,KACZ8B,SAAU,SAACC,GAAD,OAAO/C,EAAQ,2BAAKD,GAAN,IAAYiB,KAAM+B,EAAEC,OAAOH,UACnDI,KAAK,OACLC,YAAY,oFAEd,cAAC,EAAD,CAAUC,QAxBK,SAACJ,GAClBA,EAAEK,iBACF,IAAMC,EAAO,2BACRtD,GADQ,IAEXjB,GAAIwE,KAAKC,QAEXX,EAAOS,GACPrD,EAAQ,CAAEU,MAAO,GAAIM,KAAM,MAiBzB,qF,iBCVSwC,MAlBf,YAAsD,IAAnCtB,EAAkC,EAAlCA,SAAWuB,EAAuB,EAAvBA,QAASC,EAAc,EAAdA,WAE7BC,EAAc,CAAC1E,IAAG2E,SAK1B,OAJMH,GACAE,EAAYE,KAAK5E,IAAG6E,QAIxB,qBAAK9E,UAAW2E,EAAYI,KAAK,KAAMZ,QAAY,WAC/CO,GAAW,IADf,SAGE,qBAAK1E,UAAWC,IAAG+E,eAAgBb,QAAY,SAACJ,GAC5CA,EAAEkB,mBADN,SAEI/B,O,iBCIKgC,MAjBf,YAA8D,IAA1CC,EAAyC,EAAzCA,OAAQC,EAAiC,EAAjCA,aAAcvB,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SAC/C,OACE,qBAAK9D,UAAWoD,IAAQiC,SAAxB,SACE,yBAAQxB,MAAOA,EAAOC,SAAU,SAACwB,GAAD,OAAWxB,EAASwB,EAAMtB,OAAOH,QAAjE,UACE,wBAAQ0B,UAAQ,EAAC1B,MAAM,GAAvB,SACGuB,IAEFD,EAAOxD,KAAI,SAACwD,GAAD,OACV,wBAA2BtB,MAAOsB,EAAOtB,MAAzC,SACGsB,EAAOK,MADGL,EAAOtB,gBCiBf4B,MAxBf,YAA4C,IAAtB/C,EAAqB,EAArBA,OAAQgD,EAAa,EAAbA,UAC5B,OACE,gCACE,cAAC,EAAD,CACEC,YAAY,oCACZ9B,MAAOnB,EAAON,MACd0B,SAAU,SAACC,GAAD,OAAO2B,EAAU,2BAAKhD,GAAN,IAAcN,MAAO2B,EAAEC,OAAOH,YAG1D,cAAC,EAAD,CACEA,MAAOnB,EAAOP,KACd2B,SAAU,SAAC8B,GAAD,OACRF,EAAU,2BAAKhD,GAAN,IAAcP,KAAMyD,MAE/BR,aAAa,+DACbD,OAAQ,CACN,CAAEtB,MAAO,QAAS2B,KAAM,iEACxB,CAAE3B,MAAO,OAAQ2B,KAAM,wE,gBCIlBK,EArBE,SAAC1C,GAChB,IAAM2C,EAASC,cAEf,OACE,sBAAK/F,UAAU,OAAf,UACE,sBAAKA,UAAU,gBAAf,UACE,mCACGmD,EAAMpC,KAAKjB,GADd,IACmBqD,EAAMpC,KAAKW,MAAO,OAErC,oCAAOyB,EAAMpC,KAAKiB,KAAlB,UAEF,sBAAKhC,UAAU,aAAf,UACE,cAAC,EAAD,CAAUmE,QAAS,kBAAM2B,EAAOjB,KAAP,iBAAsB1B,EAAMpC,KAAKjB,MAA1D,wDAGA,cAAC,EAAD,CAAUqE,QAAS,kBAAMhB,EAAM6C,OAAO7C,EAAMpC,OAA5C,+DCIOkF,MAnBf,YAA6C,IAAzB/D,EAAwB,EAAxBA,MAAOR,EAAiB,EAAjBA,MAAOsE,EAAU,EAAVA,OAChC,OAAsB,KAAjB9D,EAAMgE,OACF,oBAAIrE,MAAO,CAAEsE,UAAW,UAAxB,qGAIP,gCACE,oBAAItE,MAAO,CAAEsE,UAAW,UAAxB,SAAqCzE,IACrC,cAAC0E,EAAA,EAAD,UACGlE,EAAMP,KAAI,SAACZ,EAAMsF,GAAP,OACT,cAACC,EAAA,EAAD,CAA6BC,QAAS,IAAKC,WAAW,OAAtD,SACE,cAAC,EAAD,CAAUR,OAAQA,EAAQS,OAAQJ,EAAQ,EAAGtF,KAAMA,KADjCA,EAAKjB,aCMpB4G,EAjBI,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,WAAYpH,EAAuB,EAAvBA,KAAMqH,EAAiB,EAAjBA,WAClCC,ETAuB,SAACF,GAG5B,IAFA,IAAIG,EAAS,GAEJC,EAAI,EAAGA,EAAIJ,EAAYI,IAC9BD,EAAOjC,KAAKkC,EAAI,GAGlB,OAAOD,ESPUE,CAAcL,GAC/B,OACE,qBAAK3G,UAAU,gBAAf,SACG6G,EAAWlF,KAAI,SAACsF,GAAD,OACd,sBACE9C,QAAS,kBAAMyC,EAAWK,IAE1BjH,UAAWT,IAAS0H,EAAI,qBAAuB,OAHjD,SAKGA,GAHIA,SCsGAC,MAjGf,WACE,MAA0B7G,mBAAS,IAAnC,mBAAO6B,EAAP,KAAciF,EAAd,KACA,EAA4B9G,mBAAS,CAAE8B,KAAM,GAAIC,MAAO,KAAxD,mBAAOM,EAAP,KAAegD,EAAf,KACA,EAA0BrF,oBAAS,GAAnC,mBAAO+G,EAAP,KAAcC,EAAd,KACA,EAAoChH,mBAAS,GAA7C,mBAAOsG,EAAP,KAAmBW,EAAnB,KACA,EAA0BjH,mBAAS,IAAnC,mBAAOf,EAAP,KAAciI,EAAd,KACA,EAAwBlH,mBAAS,GAAjC,mBAAOd,EAAP,KAAaiI,EAAb,KACMC,EAAyBxF,EAASC,EAAOQ,EAAOP,KAAMO,EAAON,OAC7DsF,EAAcC,mBAEpBC,QAAQC,IAAIH,GAEZ,MAAgDvH,EAAW,uCACzD,WAAOb,EAAOC,GAAd,iBAAAoB,EAAA,sEACyBtB,EAAYyI,OAAOxI,EAAOC,GADnD,OACQM,EADR,OAEEsH,EAAS,GAAD,mBAAKjF,GAAL,YAAerC,EAASuB,QAC1B0B,EAAajD,EAASkI,QAAQ,iBACpCT,EAAczE,EAAaC,EAAYxD,IAJzC,2CADyD,yDAA3D,mBAAO0I,EAAP,KAAmBC,EAAnB,KAAmCC,EAAnC,KA8BA,OCvDyB,SAACzE,EAAK0E,EAAS7H,EAAWF,GACnD,IAAMgI,EAAWT,mBAEjBlG,qBAAU,WACJnB,IACA8H,EAASC,SAASD,EAASC,QAAQC,aAMvCF,EAASC,QAAU,IAAIE,sBALd,SAAUC,EAASJ,GACtBI,EAAQ,GAAGC,gBAAkBN,GAC/B/H,OAIJgI,EAASC,QAAQK,QAAQjF,EAAI4E,YAC5B,CAAC/H,IDqBJqI,CAAYjB,EAAanI,EAAOoH,EAAYsB,GAAgB,WAC1DT,EAAQjI,EAAO,MAGjBkC,qBAAU,WACRuG,EAAW1I,EAAOC,KACjB,CAACA,EAAMD,IAgBR,sBAAKU,UAAU,MAAf,UACE,cAAC,EAAD,CACE6B,MAAO,CAAEC,UAAW,QACpBqC,QAAS,WACPkD,GAAS,IAHb,6FAQA,cAAC,EAAD,CAAS5C,QAAS2C,EAAO1C,WAAY2C,EAArC,SACE,cAAC,EAAD,CAAUzD,OAxBG,SAACS,GAClB8C,EAAS,GAAD,mBAAKjF,GAAL,CAAYmC,KACpBgD,GAAS,QAyBP,oBAAIxF,MAAO,CAAE+G,OAAQ,cAErB,cAAC,EAAD,CAAYlG,OAAQA,EAAQgD,UAAWA,IAEvC,cAAC,EAAD,CACE7B,MAAOvE,EACPwE,SAAU,SAACD,GAAD,OAAW0D,EAAS1D,IAC9BuB,aAAa,uJACbD,OAAQ,CACN,CAAEtB,MAAO,EAAG2B,KAAM,KAClB,CAAE3B,MAAO,GAAI2B,KAAM,MACnB,CAAE3B,OAAQ,EAAG2B,KAAM,yGAItB0C,GAAa,8HAAsBA,KAEnCD,GACC,qBACEpG,MAAO,CACLgH,QAAS,OACTC,eAAgB,SAChBhH,UAAW,QAJf,SAOE,cAAC,EAAD,MAIJ,cAAC,EAAD,CACEkE,OApDa,SAACjF,GAClBoG,EAASjF,EAAMQ,QAAO,SAACuE,GAAD,OAAOA,EAAEnH,KAAOiB,EAAKjB,QAoDvCoC,MAAOuF,EACP/F,MAAM,+EAER,qBAAK+B,IAAKiE,EAAa7F,MAAO,CAAEkH,OAAQ,GAAIC,WAAY,WAExD,cAAC,EAAD,CAAYzJ,KAAMA,EAAMqH,WAtDT,SAACrH,GAClBiI,EAAQjI,IAqD0CoH,WAAYA,QEnFnDsC,ICnBFC,EAAgB,CAC3B,CAAEC,KAAM,SAAUC,UAAWjK,EAAOkK,OAAO,GAC3C,CAAEF,KAAM,SAAUC,UAAWlC,EAAOmC,OAAO,GAC3C,CAAEF,KAAM,aAAcC,UAAWvI,EAAYwI,OAAO,IAGzCC,EAAe,CAC1B,CAAEH,KAAM,SAAUC,UDPpB,WACE,MAA8BG,qBAAWtK,GAAzBuK,GAAhB,EAAQC,OAAR,EAAgBD,WAMhB,OACE,gCACE,0IACA,uBAAME,SARI,SAACpE,GACbA,EAAMlB,iBACNoF,GAAU,GACVG,aAAaC,QAAQ,OAAQ,SAK3B,UACE,cAAC,EAAD,CAAS3F,KAAK,OAAOC,YAAY,8EACjC,cAAC,EAAD,CAASD,KAAK,WAAWC,YAAY,oFACrC,cAAC,EAAD,oDCN8BmF,OAAO,ICmC9BQ,OArCf,WACE,MAAyCN,qBAAWtK,GAA5CwK,EAAR,EAAQA,OAAoBnJ,GAA5B,EAAgBkJ,UAAhB,EAA4BlJ,WAG5B,OAFAsH,QAAQC,IAAI4B,GAETnJ,EAEC,cAAC,EAAD,IAIGmJ,EACL,eAAC,IAAD,WACGP,EAAcvH,KAAI,SAACmI,GAAD,OACjB,cAAC,IAAD,CACEV,UAAWU,EAAMV,UACjBD,KAAMW,EAAMX,KACZE,MAAOS,EAAMT,OACRS,EAAMX,SAGf,cAAC,IAAD,CAAUY,GAAG,cAGf,eAAC,IAAD,WACGT,EAAa3H,KAAI,SAACmI,GAAD,OAChB,cAAC,IAAD,CACEV,UAAWU,EAAMV,UACjBD,KAAMW,EAAMX,KACZE,MAAOS,EAAMT,OACRS,EAAMX,SAGf,cAAC,IAAD,CAAUY,GAAG,eClBJC,OAnBf,WACE,MAA8BT,qBAAWtK,GAAzBuK,GAAhB,EAAQC,OAAR,EAAgBD,WAOhB,OACE,sBAAKxJ,UAAU,SAAf,UACE,cAAC,EAAD,CAAUmE,QAPC,WACbqF,GAAU,GACVG,aAAaM,WAAW,SAKtB,4CACA,sBAAKjK,UAAU,gBAAf,UACE,cAAC,IAAD,CAAM+J,GAAG,SAAT,uCACA,cAAC,IAAD,CAAMA,GAAG,SAAT,mD,MCeOG,OA1Bf,WACE,MAA4B7J,oBAAS,GAArC,mBAAOoJ,EAAP,KAAeD,EAAf,KACA,EAAgCnJ,oBAAS,GAAzC,mBAAOC,EAAP,KAAkB6J,EAAlB,KAQA,OAPA1I,qBAAU,WACJkI,aAAaS,QAAQ,SACvBZ,GAAU,GAEZW,GAAW,KACV,IAGD,cAAClL,EAAYoL,SAAb,CACExG,MAAO,CACL4F,SACAD,YACAlJ,aAJJ,SAOE,eAAC,IAAD,WACE,cAAC,GAAD,IACA,cAAC,GAAD,UCvBRgK,IAASC,OAEL,cAAC,GAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.656bed73.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"myModal\":\"MyModal_myModal__3-njB\",\"myModalContent\":\"MyModal_myModalContent__1sOIN\",\"active\":\"MyModal_active__2Wayt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Loader_loader___oOPE\",\"rotate\":\"Loader_rotate__1r23T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myBtn\":\"MyButton_myBtn__3KCPj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myInp\":\"MyInput_myInp__Nhc7C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mySelect\":\"MySelect_mySelect__35Zja\"};","import { createContext } from \"react\";\r\n\r\nexport const AuthContext = createContext(null);\r\n","import React from \"react\";\r\n\r\nfunction About() {\r\n    \r\n  return (\r\n    <div>\r\n      <h1>О нас</h1>\r\n      <p>\r\n        Lorem ipsum dolor sit amet consectetur adipisicing elit. Rem,\r\n        consectetur eius. Enim repudiandae distinctio veniam, quam dolor itaque\r\n        minima nihil nobis sed aliquid quo ad? Pariatur sed temporibus eum.\r\n        Obcaecati.\r\n      </p>\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\nexport default About;\r\n","import React from 'react';\r\n\r\nfunction Error() {\r\n    return ( <div>\r\n        <h1 style={{color: 'teal', textAlign: 'center', margin: '20px 0px'}}>\r\n            404\r\n        </h1>\r\n        <p>Вы перешли на несуществующую страницу</p>\r\n    </div> );\r\n}\r\n\r\nexport default Error;","import axios from \"axios\";\r\n\r\nexport default class PostService {\r\n  static async getAll(limit = 10, page = 1) {\r\n    const response = await axios.get(\r\n      \"https://jsonplaceholder.typicode.com/posts\",\r\n      {\r\n        params: {\r\n          _limit: limit,\r\n          _page: page,\r\n        },\r\n      }\r\n    );\r\n\r\n    return response;\r\n  }\r\n\r\n  static async getById(id) {\r\n    const response = await axios.get(\r\n      \"https://jsonplaceholder.typicode.com/posts/\" + id\r\n    );\r\n\r\n    return response;\r\n  }\r\n\r\n  static async getCommentsByPostId(id) {\r\n    const response = await axios.get(\r\n      `https://jsonplaceholder.typicode.com/posts/${id}/comments`\r\n    );\r\n\r\n    return response;\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport cl from \"./Loader.module.css\";\r\n\r\nfunction Loader() {\r\n  return <div className={cl.loader}></div>;\r\n}\r\n\r\nexport default Loader;\r\n","import { useState } from \"react\";\r\n\r\nexport const useFetching = (callback) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const fetching = async (...args) => {\r\n    try {\r\n      setIsLoading(true);\r\n      await callback(...args);\r\n    } catch (e) {\r\n      setError(e.message);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return [fetching, isLoading, error];\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport PostService from \"../API/PostService\";\r\nimport Loader from \"../components/UI/loader/Loader\";\r\nimport { useFetching } from \"../hooks/useFetching\";\r\n\r\nfunction PostIdPage() {\r\n  const params = useParams();\r\n\r\n  const [post, setPost] = useState({});\r\n  const [comments, setComments] = useState([]);\r\n  const [fetchByPostId, isLoading, error] = useFetching(async (id) => {\r\n    const response = await PostService.getById(id);\r\n    setPost(response.data);\r\n  });\r\n\r\n  const [fetchComments, isComLoading, comError] = useFetching(async (id) => {\r\n    const response = await PostService.getCommentsByPostId(id);\r\n    setComments(response.data);\r\n  });\r\n\r\n  useEffect(() => {\r\n    fetchByPostId(params.id);\r\n    fetchComments(params.id);\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <h1>Вы открыли пост с ID = {params.id}</h1>\r\n      {isLoading ? (\r\n        <Loader />\r\n      ) : (\r\n        <div>\r\n          {post.id}. {post.title}\r\n        </div>\r\n      )}\r\n\r\n      <h1>Комментарии</h1>\r\n\r\n      <div>\r\n        {isComLoading ? (\r\n          <Loader />\r\n        ) : (\r\n          <div>\r\n            {comments.map((comm) => (\r\n              <div key={comm.id} style={{ marginTop: 15 }}>\r\n                <h5>{comm.email}</h5>\r\n                <div>{comm.body}</div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PostIdPage;\r\n","import { useMemo } from \"react\";\r\n\r\nexport const useSortedPosts = (posts, sort) => {\r\n  const sortedPosts = useMemo(() => {\r\n    if (sort) {\r\n      return [...posts].sort((a, b) => a[sort].localeCompare(b[sort]));\r\n    }\r\n    return posts;\r\n  }, [sort, posts]);\r\n\r\n  return sortedPosts;\r\n};\r\n\r\nexport const usePosts = (posts, sort, query) => {\r\n  const sortedPosts = useSortedPosts(posts, sort);\r\n  const sortedAndSearchedPosts = useMemo(() => {\r\n    return sortedPosts.filter((post) =>\r\n      post.title.toLowerCase().includes(query)\r\n    );\r\n  }, [query, sortedPosts]);\r\n\r\n  return sortedAndSearchedPosts;\r\n};\r\n","export const getPageCount = (totalCount, limit) => {\r\n  return Math.ceil(totalCount / limit);\r\n};\r\n\r\nexport const getPagesArray = (totalPages) => {\r\n  let result = [];\r\n\r\n  for (let i = 0; i < totalPages; i++) {\r\n    result.push(i + 1);\r\n  }\r\n\r\n  return result;\r\n};\r\n","import React from \"react\";\r\nimport classes from \"./MyButton.module.css\";\r\n\r\nconst MyButton = ({children, ...props}) => {\r\n  return <button {...props} className={classes.myBtn}>\r\n      {children}\r\n  </button>;\r\n};\r\n\r\nexport default MyButton;\r\n","import React from \"react\";\r\nimport classes from \"./MyInput.module.css\";\r\n\r\nconst MyInput = React.forwardRef((props, ref) => {\r\n  return <input ref={ref} className={classes.myInp} {...props} />;\r\n});\r\n\r\nexport default MyInput;\r\n","import React, { useState } from \"react\";\r\nimport MyButton from \"./UI/button/MyButton\";\r\nimport MyInput from \"./UI/input/MyInput\";\r\n\r\nfunction PostForm({ create }) {\r\n  const [post, setPost] = useState({ title: \"\", body: \"\" });\r\n\r\n  const addNewPost = (e) => {\r\n    e.preventDefault();\r\n    const newPost = {\r\n      ...post,\r\n      id: Date.now(),\r\n    };\r\n    create(newPost);\r\n    setPost({ title: \"\", body: \"\" });\r\n  };\r\n\r\n  return (\r\n    <form>\r\n      <MyInput\r\n        value={post.title}\r\n        onChange={(e) => setPost({ ...post, title: e.target.value })}\r\n        type=\"text\"\r\n        placeholder=\"Название поста\"\r\n      />\r\n      <MyInput\r\n        value={post.body}\r\n        onChange={(e) => setPost({ ...post, body: e.target.value })}\r\n        type=\"text\"\r\n        placeholder=\"Описание поста\"\r\n      />\r\n      <MyButton onClick={addNewPost}>Создать пост</MyButton>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default PostForm;\r\n","import React from \"react\";\r\nimport cl from \"./MyModal.module.css\";\r\n\r\nfunction MyModal({ children , visible, setVisible }) {\r\n\r\n    const rootClasses = [cl.myModal] \r\n    if( visible) {\r\n        rootClasses.push(cl.active);\r\n    }\r\n\r\n  return (\r\n    <div className={rootClasses.join(\" \")} onClick = { () => {\r\n        setVisible(false)\r\n    }}>\r\n      <div className={cl.myModalContent} onClick = { (e) => {\r\n          e.stopPropagation();\r\n      }}>{children}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MyModal;\r\n","import React from \"react\";\r\nimport classes from \"./MySelect.module.css\";\r\n\r\nfunction MySelect({ option, defaultValue, value, onChange }) {\r\n  return (\r\n    <div className={classes.mySelect}>\r\n      <select value={value} onChange={(event) => onChange(event.target.value)}>\r\n        <option disabled value=\"\">\r\n          {defaultValue}\r\n        </option>\r\n        {option.map((option) => (\r\n          <option key={option.value} value={option.value}>\r\n            {option.name}\r\n          </option>\r\n        ))}\r\n      </select>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MySelect;\r\n","import React from \"react\";\r\nimport MyInput from \"./UI/input/MyInput\";\r\nimport MySelect from \"./UI/select/MySelect\";\r\n\r\nfunction PostFilter({ filter, setFilter }) {\r\n  return (\r\n    <div>\r\n      <MyInput\r\n        placeHolder=\"Поиск...\"\r\n        value={filter.query}\r\n        onChange={(e) => setFilter({ ...filter, query: e.target.value })}\r\n      />\r\n\r\n      <MySelect\r\n        value={filter.sort}\r\n        onChange={(selectedSort) =>\r\n          setFilter({ ...filter, sort: selectedSort })\r\n        }\r\n        defaultValue=\"Сортировка\"\r\n        option={[\r\n          { value: \"title\", name: \"По названию\" },\r\n          { value: \"body\", name: \"По описанию\" },\r\n        ]}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PostFilter;\r\n","import React from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport MyButton from \"./UI/button/MyButton\";\r\n\r\nconst PostItem = (props) => {\r\n  const router = useHistory();\r\n\r\n  return (\r\n    <div className=\"post\">\r\n      <div className=\"post__content\">\r\n        <strong>\r\n          {props.post.id} {props.post.title}{\" \"}\r\n        </strong>\r\n        <div> {props.post.body} </div>\r\n      </div>\r\n      <div className=\"post__btns\">\r\n        <MyButton onClick={() => router.push(`/posts/${props.post.id}`)}>\r\n          Открыть\r\n        </MyButton>\r\n        <MyButton onClick={() => props.remove(props.post)}>Удалить</MyButton>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostItem;\r\n","import React from \"react\";\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\r\nimport PostItem from \"./PostItem\";\r\n\r\nfunction PostList({ posts, title, remove }) {\r\n  if (!posts.length === 0) {\r\n    return <h1 style={{ textAlign: \"center\" }}>Посты не найдены!</h1>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1 style={{ textAlign: \"center\" }}>{title}</h1>\r\n      <TransitionGroup>\r\n        {posts.map((post, index) => (\r\n          <CSSTransition key={post.id} timeout={500} classNames=\"post\">\r\n            <PostItem remove={remove} number={index + 1} post={post} />\r\n          </CSSTransition>\r\n        ))}\r\n      </TransitionGroup>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PostList;\r\n","import React from \"react\";\r\nimport { getPagesArray } from \"../../../utils/pages\";\r\n\r\nconst Pagination = ({ totalPages, page, changePage }) => {\r\n  let pagesArray = getPagesArray(totalPages);\r\n  return (\r\n    <div className=\"page__wrapper\">\r\n      {pagesArray.map((p) => (\r\n        <span\r\n          onClick={() => changePage(p)}\r\n          key={p}\r\n          className={page === p ? \"page page__current\" : \"page\"}\r\n        >\r\n          {p}\r\n        </span>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport PostService from \"../API/PostService\";\r\nimport { usePosts } from \"../hooks/usePosts\";\r\nimport { useFetching } from \"../hooks/useFetching\";\r\nimport { getPageCount } from \"../utils/pages\";\r\nimport MyButton from \"../components/UI/button/MyButton\";\r\nimport PostForm from \"../components/PostForm\";\r\nimport MyModal from \"../components/UI/modal/MyModal\";\r\nimport PostFilter from \"../components/PostFilter\";\r\nimport PostList from \"../components/PostList\";\r\nimport Loader from \"../components/UI/loader/Loader\";\r\nimport Pagination from \"../components/UI/pagination/Pagination\";\r\nimport { useObserver } from \"../hooks/useObserver\";\r\nimport MySelect from \"../components/UI/select/MySelect\";\r\n\r\nfunction Posts() {\r\n  const [posts, setPosts] = useState([]);\r\n  const [filter, setFilter] = useState({ sort: \"\", query: \"\" });\r\n  const [modal, setModal] = useState(false);\r\n  const [totalPages, setTotalPages] = useState(0);\r\n  const [limit, setLimit] = useState(10);\r\n  const [page, setPage] = useState(1);\r\n  const sortedAndSearchedPosts = usePosts(posts, filter.sort, filter.query);\r\n  const lastElement = useRef();\r\n\r\n  console.log(lastElement);\r\n\r\n  const [fetchPosts, isPostsLoading, postError] = useFetching(\r\n    async (limit, page) => {\r\n      const response = await PostService.getAll(limit, page);\r\n      setPosts([...posts, ...response.data]);\r\n      const totalCount = response.headers[\"x-total-count\"];\r\n      setTotalPages(getPageCount(totalCount, limit));\r\n    }\r\n  );\r\n\r\n  useObserver(lastElement, page < totalPages, isPostsLoading, () => {\r\n    setPage(page + 1);\r\n  });\r\n\r\n  useEffect(() => {\r\n    fetchPosts(limit, page);\r\n  }, [page, limit]);\r\n\r\n  const createPost = (newPost) => {\r\n    setPosts([...posts, newPost]);\r\n    setModal(false);\r\n  };\r\n\r\n  const removePost = (post) => {\r\n    setPosts(posts.filter((p) => p.id !== post.id));\r\n  };\r\n\r\n  const changePage = (page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <MyButton\r\n        style={{ marginTop: \"30px\" }}\r\n        onClick={() => {\r\n          setModal(true);\r\n        }}\r\n      >\r\n        Создать запись\r\n      </MyButton>\r\n      <MyModal visible={modal} setVisible={setModal}>\r\n        <PostForm create={createPost} />\r\n      </MyModal>\r\n\r\n      <hr style={{ margin: \"15px 0px\" }} />\r\n\r\n      <PostFilter filter={filter} setFilter={setFilter} />\r\n\r\n      <MySelect\r\n        value={limit}\r\n        onChange={(value) => setLimit(value)}\r\n        defaultValue=\"Кол-во элементов на странице\"\r\n        option={[\r\n          { value: 5, name: \"5\" },\r\n          { value: 25, name: \"25\" },\r\n          { value: -1, name: \"Показать все посты\" },\r\n        ]}\r\n      />\r\n\r\n      {postError && <h1>Произошла ошибка {postError}</h1>}\r\n\r\n      {isPostsLoading && (\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            marginTop: \"50px\",\r\n          }}\r\n        >\r\n          <Loader />\r\n        </div>\r\n      )}\r\n\r\n      <PostList\r\n        remove={removePost}\r\n        posts={sortedAndSearchedPosts}\r\n        title=\"Посты на тему Lorem\"\r\n      />\r\n      <div ref={lastElement} style={{ height: 20, background: \"black\" }}></div>\r\n\r\n      <Pagination page={page} changePage={changePage} totalPages={totalPages} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Posts;\r\n","import { useEffect, useRef } from \"react\";\r\n\r\nexport const useObserver = (ref, canLoad, isLoading, callback) => {\r\n  const observer = useRef();\r\n\r\n  useEffect(() => {\r\n    if (isLoading) return;\r\n    if (observer.current) observer.current.disconnect();\r\n    var cb = function (entries, observer) {\r\n      if (entries[0].isIntersecting && canLoad) {\r\n        callback();\r\n      }\r\n    };\r\n    observer.current = new IntersectionObserver(cb);\r\n    observer.current.observe(ref.current);\r\n  }, [isLoading]);\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport MyButton from \"../components/UI/button/MyButton\";\r\nimport MyInput from \"../components/UI/input/MyInput\";\r\nimport { AuthContext } from \"../context\";\r\n\r\nfunction Login() {\r\n  const { isAuth, setIsAuth } = useContext(AuthContext);\r\n  const login = (event) => {\r\n    event.preventDefault();\r\n    setIsAuth(true);\r\n    localStorage.setItem(\"auth\", \"true\");\r\n  };\r\n  return (\r\n    <div>\r\n      <h1>Страница для логина</h1>\r\n      <form onSubmit={login}>\r\n        <MyInput type=\"text\" placeholder=\"Введите логин\" />\r\n        <MyInput type=\"password\" placeholder=\"Введите пароль\" />\r\n        <MyButton>Войти</MyButton>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import About from \"../pages/About\";\r\nimport Login from \"../pages/Login\";\r\nimport PostIdPage from \"../pages/PostIdPage\";\r\nimport Posts from \"../pages/Posts\";\r\n\r\nexport const PrivateRoutes = [\r\n  { path: \"/about\", component: About, exact: true },\r\n  { path: \"/posts\", component: Posts, exact: true },\r\n  { path: \"/posts/:id\", component: PostIdPage, exact: true },\r\n];\r\n\r\nexport const PublicRoutes = [\r\n  { path: \"/login\", component: Login, exact: true },\r\n];\r\n\r\n","import React, { useContext } from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport { AuthContext } from \"../context\";\r\nimport About from \"../pages/About\";\r\nimport Error from \"../pages/Error\";\r\nimport PostIdPage from \"../pages/PostIdPage\";\r\nimport Posts from \"../pages/Posts\";\r\nimport { PrivateRoutes, PublicRoutes, routes } from \"../router\";\r\nimport Loader from \"./UI/loader/Loader\";\r\n\r\nfunction AppRouter() {\r\n  const { isAuth, setIsAuth , isLoading} = useContext(AuthContext);\r\n  console.log(isAuth);\r\n\r\n  if(isLoading) {\r\n    return(\r\n      <Loader/>\r\n    )\r\n  }\r\n\r\n  return isAuth ? (\r\n    <Switch>\r\n      {PrivateRoutes.map((route) => (\r\n        <Route\r\n          component={route.component}\r\n          path={route.path}\r\n          exact={route.exact}\r\n          key={route.path}\r\n        />\r\n      ))}\r\n      <Redirect to=\"/posts\" />\r\n    </Switch>\r\n  ) : (\r\n    <Switch>\r\n      {PublicRoutes.map((route) => (\r\n        <Route\r\n          component={route.component}\r\n          path={route.path}\r\n          exact={route.exact}\r\n          key={route.path}\r\n        />\r\n      ))}\r\n      <Redirect to=\"/login\" />\r\n    </Switch>\r\n  );\r\n}\r\n\r\nexport default AppRouter;\r\n","import React, { useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { AuthContext } from \"../../../context\";\r\nimport MyButton from \"../button/MyButton\";\r\n\r\nfunction Navbar() {\r\n  const { isAuth, setIsAuth } = useContext(AuthContext);\r\n\r\n  const logout = () => {\r\n    setIsAuth(false);\r\n    localStorage.removeItem(\"auth\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"navbar\">\r\n      <MyButton onClick={logout}>Выйти</MyButton>\r\n      <div className=\"navbar__links\">\r\n        <Link to=\"/about\">О нас</Link>\r\n        <Link to=\"/posts\">Посты</Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport AppRouter from \"./components/AppRouter\";\nimport Navbar from \"./components/UI/navbar/Navbar\";\nimport { AuthContext } from \"./context\";\nimport \"./styles/App.css\";\n\nfunction App() {\n  const [isAuth, setIsAuth] = useState(false);\n  const [isLoading, setLoading] = useState(true);\n  useEffect(() => {\n    if (localStorage.getItem(\"auth\")) {\n      setIsAuth(true);\n    } \n    setLoading(false);\n  }, []);\n\n  return (\n    <AuthContext.Provider\n      value={{\n        isAuth,\n        setIsAuth,\n        isLoading\n      }}\n    >\n      <BrowserRouter>\n        <Navbar />\n        <AppRouter />\n      </BrowserRouter>\n    </AuthContext.Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n\n    <App/>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}